---
// Theme toggle component
---

<button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
	<svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
		<path d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z"/>
	</svg>
	<svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
		<path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd"/>
	</svg>
	<span class="theme-text">Dark</span>
</button>

<script>
	// Theme toggle functionality
	document.addEventListener('DOMContentLoaded', () => {
		const themeToggle = document.getElementById('theme-toggle');
		const sunIcon = themeToggle?.querySelector('.sun-icon');
		const moonIcon = themeToggle?.querySelector('.moon-icon');
		const themeText = themeToggle?.querySelector('.theme-text');
		
		// Get saved theme from localStorage or default to 'dark'
		const savedTheme = localStorage.getItem('theme') || 'dark';
		document.documentElement.setAttribute('data-theme', savedTheme);
		updateToggleDisplay(savedTheme);
		
		themeToggle?.addEventListener('click', () => {
			const currentTheme = document.documentElement.getAttribute('data-theme');
			const newTheme = currentTheme === 'light' ? 'dark' : 'light';
			
			// Update theme
			document.documentElement.setAttribute('data-theme', newTheme);
			localStorage.setItem('theme', newTheme);
			updateToggleDisplay(newTheme);
		});
		
		function updateToggleDisplay(theme) {
			if (theme === 'light') {
				sunIcon?.classList.add('hidden');
				moonIcon?.classList.remove('hidden');
				themeText.textContent = 'Light';
			} else {
				sunIcon?.classList.remove('hidden');
				moonIcon?.classList.add('hidden');
				themeText.textContent = 'Dark';
			}
		}
	});
</script>

<style>
	.theme-toggle .hidden {
		display: none;
	}
	
	.theme-toggle svg {
		width: 16px;
		height: 16px;
	}
	
	@media (max-width: 768px) {
		.theme-toggle {
			padding: 6px 10px;
			font-size: 12px;
		}
		
		.theme-toggle svg {
			width: 14px;
			height: 14px;
		}
	}
</style> 